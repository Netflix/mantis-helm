apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: mantis-agent
    app.kubernetes.io/part-of: mantis
    app.kubernetes.io/component: agent
  name: mantis-agent
spec:
  replicas: {{ .Values.replicas | default 3 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: mantis-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mantis-agent
    spec:
      containers:
        - name: mantis-agent
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          image: {{ .Values.image | default "hmittal-agent" }}
          # imagePullPolicy: IfNotPresent
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Dmantis.taskexecutor.id=agent1 -Dmantis.taskexecutor.rpc.external-address=
          #command: ["/server/service"]
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /app
              name: app
          ports:
            - containerPort: {{ .Values.api_port }}
            # add more ports
          # startupProbe:
          #   httpGet:
          #     port: {{ .Values.api_port }}
          #     path: /api/v1/masterInfo
          #   failureThreshold: 6
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     port: {{ .Values.api_port }}
          #     path: /api/v1/masterInfo
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   readOnlyRootFilesystem: true
          #   capabilities:
          #     drop:
          #       - all
      volumes:
        - name: tmp
          emptyDir: {}
        - name: app
          emptyDir: {}
